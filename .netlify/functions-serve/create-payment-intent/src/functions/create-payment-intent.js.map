{
  "version": 3,
  "sources": ["../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/dotenv/lib/main.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/ResourceNamespace.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/qs/lib/utils.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/qs/lib/formats.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/qs/lib/stringify.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/qs/lib/parse.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/qs/lib/index.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/utils.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/Error.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/makeRequest.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/autoPagination.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/StripeMethod.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/StripeMethod.basic.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/StripeResource.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Accounts.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/AccountLinks.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/ApplePayDomains.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/ApplicationFees.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Balance.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/BalanceTransactions.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Charges.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/CountrySpecs.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Coupons.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/CreditNotes.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Customers.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Disputes.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/EphemeralKeys.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Events.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/ExchangeRates.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/multipart.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Files.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/FileLinks.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Invoices.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/InvoiceItems.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/IssuerFraudRecords.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Mandates.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/OAuth.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Orders.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/OrderReturns.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/PaymentIntents.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/PaymentMethods.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Payouts.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Plans.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Prices.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Products.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/PromotionCodes.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Refunds.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Reviews.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/SetupAttempts.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/SetupIntents.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/SKUs.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Sources.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Subscriptions.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/SubscriptionItems.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/SubscriptionSchedules.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/TaxRates.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Tokens.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Topups.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Transfers.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/WebhookEndpoints.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/BillingPortal/Sessions.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Checkout/Sessions.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Issuing/Authorizations.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Issuing/Cards.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Issuing/Cardholders.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Issuing/Disputes.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Issuing/Transactions.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Radar/EarlyFraudWarnings.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Radar/ValueLists.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Radar/ValueListItems.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Reporting/ReportRuns.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Reporting/ReportTypes.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Sigma/ScheduledQueryRuns.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Terminal/ConnectionTokens.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Terminal/Locations.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources/Terminal/Readers.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/resources.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/Webhooks.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/node_modules/stripe/lib/stripe.js", "../../../../../coding-guy/Documents/GitHub/typescript-e-commerce/functions/create-payment-intent.ts"],
  "sourceRoot": "C:/Users/CODING~1/AppData/Local/Temp/tmp-1240-I0RXxVdfWYOe",
  "sourcesContent": ["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\n|\\r|\\r\\n/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n", "'use strict';\n\n// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\n\nfunction ResourceNamespace(stripe, resources) {\n  for (const name in resources) {\n    const camelCaseName = name[0].toLowerCase() + name.substring(1);\n\n    const resource = new resources[name](stripe);\n\n    this[camelCaseName] = resource;\n  }\n}\n\nmodule.exports = function(namespace, resources) {\n  return function(stripe) {\n    return new ResourceNamespace(stripe, resources);\n  };\n};\n\nmodule.exports.ResourceNamespace = ResourceNamespace;\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst qs = require('qs');\nconst crypto = require('crypto');\n\nconst hasOwn = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\n// Certain sandboxed environments (our known example right now are CloudFlare\n// Workers) may make `child_process` unavailable. Because `exec` isn't critical\n// to the operation of stripe-node, we handle this unavailability gracefully.\nlet exec = null;\ntry {\n  exec = require('child_process').exec;\n} catch (e) {\n  if (e.code !== 'MODULE_NOT_FOUND') {\n    throw e;\n  }\n}\n\nconst OPTIONS_KEYS = [\n  'apiKey',\n  'idempotencyKey',\n  'stripeAccount',\n  'apiVersion',\n  'maxNetworkRetries',\n  'timeout',\n];\n\nconst DEPRECATED_OPTIONS = {\n  api_key: 'apiKey',\n  idempotency_key: 'idempotencyKey',\n  stripe_account: 'stripeAccount',\n  stripe_version: 'apiVersion',\n  stripeVersion: 'apiVersion',\n};\nconst DEPRECATED_OPTIONS_KEYS = Object.keys(DEPRECATED_OPTIONS);\n\nconst utils = (module.exports = {\n  isOptionsHash(o) {\n    return (\n      o &&\n      typeof o === 'object' &&\n      (OPTIONS_KEYS.some((prop) => hasOwn(o, prop)) ||\n        DEPRECATED_OPTIONS_KEYS.some((prop) => hasOwn(o, prop)))\n    );\n  },\n\n  /**\n   * Stringifies an Object, accommodating nested objects\n   * (forming the conventional key 'parent[child]=value')\n   */\n  stringifyRequestData: (data) => {\n    return (\n      qs\n        .stringify(data, {\n          serializeDate: (d) => Math.floor(d.getTime() / 1000),\n        })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']')\n    );\n  },\n\n  /**\n   * Outputs a new function with interpolated object property values.\n   * Use like so:\n   *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n   *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n   */\n  makeURLInterpolator: (() => {\n    const rc = {\n      '\\n': '\\\\n',\n      '\"': '\\\\\"',\n      '\\u2028': '\\\\u2028',\n      '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n      const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n      return (outputs) => {\n        return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) =>\n          encodeURIComponent(outputs[$1] || '')\n        );\n      };\n    };\n  })(),\n\n  extractUrlParams: (path) => {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n      return [];\n    }\n\n    return params.map((param) => param.replace(/[{}]/g, ''));\n  },\n\n  /**\n   * Return the data argument from a list of arguments\n   *\n   * @param {object[]} args\n   * @returns {object}\n   */\n  getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n      return {};\n    }\n\n    if (!utils.isOptionsHash(args[0])) {\n      return args.shift();\n    }\n\n    const argKeys = Object.keys(args[0]);\n\n    const optionKeysInArgs = argKeys.filter((key) =>\n      OPTIONS_KEYS.includes(key)\n    );\n\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (\n      optionKeysInArgs.length > 0 &&\n      optionKeysInArgs.length !== argKeys.length\n    ) {\n      emitWarning(\n        `Options found in arguments (${optionKeysInArgs.join(\n          ', '\n        )}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`\n      );\n    }\n\n    return {};\n  },\n\n  /**\n   * Return the options hash from a list of arguments\n   */\n  getOptionsFromArgs: (args) => {\n    const opts = {\n      auth: null,\n      headers: {},\n      settings: {},\n    };\n    if (args.length > 0) {\n      const arg = args[args.length - 1];\n      if (typeof arg === 'string') {\n        opts.auth = args.pop();\n      } else if (utils.isOptionsHash(arg)) {\n        const params = {...args.pop()};\n\n        const extraKeys = Object.keys(params).filter(\n          (key) => !OPTIONS_KEYS.includes(key)\n        );\n\n        if (extraKeys.length) {\n          const nonDeprecated = extraKeys.filter((key) => {\n            if (!DEPRECATED_OPTIONS[key]) {\n              return true;\n            }\n            const newParam = DEPRECATED_OPTIONS[key];\n            if (params[newParam]) {\n              throw Error(\n                `Both '${newParam}' and '${key}' were provided; please remove '${key}', which is deprecated.`\n              );\n            }\n            /**\n             * TODO turn this into a hard error in a future major version (once we have fixed our docs).\n             */\n            emitWarning(`'${key}' is deprecated; use '${newParam}' instead.`);\n            params[newParam] = params[key];\n          });\n          if (nonDeprecated.length) {\n            emitWarning(\n              `Invalid options found (${extraKeys.join(', ')}); ignoring.`\n            );\n          }\n        }\n\n        if (params.apiKey) {\n          opts.auth = params.apiKey;\n        }\n        if (params.idempotencyKey) {\n          opts.headers['Idempotency-Key'] = params.idempotencyKey;\n        }\n        if (params.stripeAccount) {\n          opts.headers['Stripe-Account'] = params.stripeAccount;\n        }\n        if (params.apiVersion) {\n          opts.headers['Stripe-Version'] = params.apiVersion;\n        }\n        if (Number.isInteger(params.maxNetworkRetries)) {\n          opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n        }\n        if (Number.isInteger(params.timeout)) {\n          opts.settings.timeout = params.timeout;\n        }\n      }\n    }\n    return opts;\n  },\n\n  /**\n   * Provide simple \"Class\" extension mechanism\n   */\n  protoExtend(sub) {\n    const Super = this;\n    const Constructor = hasOwn(sub, 'constructor')\n      ? sub.constructor\n      : function(...args) {\n          Super.apply(this, args);\n        };\n\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n\n    return Constructor;\n  },\n\n  /**\n   * Secure compare, from https://github.com/freewil/scmp\n   */\n  secureCompare: (a, b) => {\n    a = Buffer.from(a);\n    b = Buffer.from(b);\n\n    // return early here if buffer lengths are not equal since timingSafeEqual\n    // will throw if buffer lengths are not equal\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n    // otherwise use our own scmp-internal function.\n    if (crypto.timingSafeEqual) {\n      return crypto.timingSafeEqual(a, b);\n    }\n\n    const len = a.length;\n    let result = 0;\n\n    for (let i = 0; i < len; ++i) {\n      result |= a[i] ^ b[i];\n    }\n    return result === 0;\n  },\n\n  /**\n   * Remove empty values from an object\n   */\n  removeNullish: (obj) => {\n    if (typeof obj !== 'object') {\n      throw new Error('Argument must be an object');\n    }\n\n    return Object.keys(obj).reduce((result, key) => {\n      if (obj[key] != null) {\n        result[key] = obj[key];\n      }\n      return result;\n    }, {});\n  },\n\n  /**\n   * Normalize standard HTTP Headers:\n   * {'foo-bar': 'hi'}\n   * becomes\n   * {'Foo-Bar': 'hi'}\n   */\n  normalizeHeaders: (obj) => {\n    if (!(obj && typeof obj === 'object')) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((result, header) => {\n      result[utils.normalizeHeader(header)] = obj[header];\n      return result;\n    }, {});\n  },\n\n  /**\n   * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n   * without the exceptions which are irrelevant to us.\n   */\n  normalizeHeader: (header) => {\n    return header\n      .split('-')\n      .map(\n        (text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase()\n      )\n      .join('-');\n  },\n\n  /**\n   * Determine if file data is a derivative of EventEmitter class.\n   * https://nodejs.org/api/events.html#events_events\n   */\n  checkForStream: (obj) => {\n    if (obj.file && obj.file.data) {\n      return obj.file.data instanceof EventEmitter;\n    }\n    return false;\n  },\n\n  callbackifyPromiseWithTimeout: (promise, callback) => {\n    if (callback) {\n      // Ensure callback is called outside of promise stack.\n      return promise.then(\n        (res) => {\n          setTimeout(() => {\n            callback(null, res);\n          }, 0);\n        },\n        (err) => {\n          setTimeout(() => {\n            callback(err, null);\n          }, 0);\n        }\n      );\n    }\n\n    return promise;\n  },\n\n  /**\n   * Allow for special capitalization cases (such as OAuth)\n   */\n  pascalToCamelCase: (name) => {\n    if (name === 'OAuth') {\n      return 'oauth';\n    } else {\n      return name[0].toLowerCase() + name.substring(1);\n    }\n  },\n\n  emitWarning,\n\n  /**\n   * Node's built in `exec` function sometimes throws outright,\n   * and sometimes has a callback with an error,\n   * depending on the type of error.\n   *\n   * This unifies that interface.\n   */\n  safeExec: (cmd, cb) => {\n    // Occurs if we couldn't load the `child_process` module, which might\n    // happen in certain sandboxed environments like a CloudFlare Worker.\n    if (utils._exec === null) {\n      cb(new Error('exec not available'), null);\n      return;\n    }\n\n    try {\n      utils._exec(cmd, cb);\n    } catch (e) {\n      cb(e, null);\n    }\n  },\n\n  // For mocking in tests.\n  _exec: exec,\n\n  isObject: (obj) => {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n  },\n\n  // For use in multipart requests\n  flattenAndStringify: (data) => {\n    const result = {};\n\n    const step = (obj, prevKey) => {\n      Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n\n        const newKey = prevKey ? `${prevKey}[${key}]` : key;\n\n        if (utils.isObject(value)) {\n          if (!Buffer.isBuffer(value) && !value.hasOwnProperty('data')) {\n            // Non-buffer non-file Objects are recursively flattened\n            return step(value, newKey);\n          } else {\n            // Buffers and file objects are stored without modification\n            result[newKey] = value;\n          }\n        } else {\n          // Primitives are converted to strings\n          result[newKey] = String(value);\n        }\n      });\n    };\n\n    step(data);\n\n    return result;\n  },\n\n  /**\n   * https://stackoverflow.com/a/2117523\n   */\n  uuid4: () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n\n  validateInteger: (name, n, defaultVal) => {\n    if (!Number.isInteger(n)) {\n      if (defaultVal !== undefined) {\n        return defaultVal;\n      } else {\n        throw new Error(`${name} must be an integer`);\n      }\n    }\n\n    return n;\n  },\n});\n\nfunction emitWarning(warning) {\n  if (typeof process.emitWarning !== 'function') {\n    return console.warn(\n      `Stripe: ${warning}`\n    ); /* eslint-disable-line no-console */\n  }\n\n  return process.emitWarning(warning, 'Stripe');\n}\n", "'use strict';\n\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nclass StripeError extends Error {\n  constructor(raw = {}) {\n    super(raw.message);\n    this.type = this.constructor.name;\n\n    this.raw = raw;\n    this.rawType = raw.type;\n    this.code = raw.code;\n    this.doc_url = raw.doc_url;\n    this.param = raw.param;\n    this.detail = raw.detail;\n    this.headers = raw.headers;\n    this.requestId = raw.requestId;\n    this.statusCode = raw.statusCode;\n    this.message = raw.message;\n\n    this.charge = raw.charge;\n    this.decline_code = raw.decline_code;\n    this.payment_intent = raw.payment_intent;\n    this.payment_method = raw.payment_method;\n    this.payment_method_type = raw.payment_method_type;\n    this.setup_intent = raw.setup_intent;\n    this.source = raw.source;\n  }\n\n  /**\n   * Helper factory which takes raw stripe errors and outputs wrapping instances\n   */\n  static generate(rawStripeError) {\n    switch (rawStripeError.type) {\n      case 'card_error':\n        return new StripeCardError(rawStripeError);\n      case 'invalid_request_error':\n        return new StripeInvalidRequestError(rawStripeError);\n      case 'api_error':\n        return new StripeAPIError(rawStripeError);\n      case 'authentication_error':\n        return new StripeAuthenticationError(rawStripeError);\n      case 'rate_limit_error':\n        return new StripeRateLimitError(rawStripeError);\n      case 'idempotency_error':\n        return new StripeIdempotencyError(rawStripeError);\n      case 'invalid_grant':\n        return new StripeInvalidGrantError(rawStripeError);\n      default:\n        return new GenericError('Generic', 'Unknown Error');\n    }\n  }\n}\n\n// Specific Stripe Error types:\n\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nclass StripeCardError extends StripeError {}\n\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nclass StripeInvalidRequestError extends StripeError {}\n\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nclass StripeAPIError extends StripeError {}\n\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nclass StripeAuthenticationError extends StripeError {}\n\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nclass StripePermissionError extends StripeError {}\n\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nclass StripeRateLimitError extends StripeError {}\n\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nclass StripeConnectionError extends StripeError {}\n\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nclass StripeSignatureVerificationError extends StripeError {}\n\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nclass StripeIdempotencyError extends StripeError {}\n\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nclass StripeInvalidGrantError extends StripeError {}\n\nmodule.exports.generate = StripeError.generate;\nmodule.exports.StripeError = StripeError;\nmodule.exports.StripeCardError = StripeCardError;\nmodule.exports.StripeInvalidRequestError = StripeInvalidRequestError;\nmodule.exports.StripeAPIError = StripeAPIError;\nmodule.exports.StripeAuthenticationError = StripeAuthenticationError;\nmodule.exports.StripePermissionError = StripePermissionError;\nmodule.exports.StripeRateLimitError = StripeRateLimitError;\nmodule.exports.StripeConnectionError = StripeConnectionError;\nmodule.exports.StripeSignatureVerificationError = StripeSignatureVerificationError;\nmodule.exports.StripeIdempotencyError = StripeIdempotencyError;\nmodule.exports.StripeInvalidGrantError = StripeInvalidGrantError;\n", "'use strict';\n\nconst utils = require('./utils');\n\nfunction getRequestOpts(self, requestArgs, spec, overrideData) {\n  // Extract spec values with defaults.\n  const commandPath = utils.makeURLInterpolator(spec.path || '');\n  const requestMethod = (spec.method || 'GET').toUpperCase();\n  const urlParams = spec.urlParams || [];\n  const encode = spec.encode || ((data) => data);\n  const host = spec.host;\n  const path = self.createResourcePathWithSymbols(spec.path);\n\n  // Don't mutate args externally.\n  const args = [].slice.call(requestArgs);\n\n  // Generate and validate url params.\n  const urlData = urlParams.reduce((urlData, param) => {\n    const arg = args.shift();\n    if (typeof arg !== 'string') {\n      throw new Error(\n        `Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`\n      );\n    }\n\n    urlData[param] = arg;\n    return urlData;\n  }, {});\n\n  // Pull request data and options (headers, auth) from args.\n  const dataFromArgs = utils.getDataFromArgs(args);\n  const data = encode(Object.assign({}, dataFromArgs, overrideData));\n  const options = utils.getOptionsFromArgs(args);\n\n  // Validate that there are no more args.\n  if (args.filter((x) => x != null).length) {\n    throw new Error(\n      `Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`\n    );\n  }\n\n  const requestPath = self.createFullPath(commandPath, urlData);\n  const headers = Object.assign(options.headers, spec.headers);\n\n  if (spec.validator) {\n    spec.validator(data, {headers});\n  }\n\n  const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n  const bodyData = dataInQuery ? {} : data;\n  const queryData = dataInQuery ? data : {};\n\n  return {\n    requestMethod,\n    requestPath,\n    bodyData,\n    queryData,\n    auth: options.auth,\n    headers,\n    host,\n    settings: options.settings,\n  };\n}\n\nfunction makeRequest(self, requestArgs, spec, overrideData) {\n  return new Promise((resolve, reject) => {\n    let opts;\n    try {\n      opts = getRequestOpts(self, requestArgs, spec, overrideData);\n    } catch (err) {\n      reject(err);\n      return;\n    }\n\n    function requestCallback(err, response) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(\n          spec.transformResponseData\n            ? spec.transformResponseData(response)\n            : response\n        );\n      }\n    }\n\n    const emptyQuery = Object.keys(opts.queryData).length === 0;\n    const path = [\n      opts.requestPath,\n      emptyQuery ? '' : '?',\n      utils.stringifyRequestData(opts.queryData),\n    ].join('');\n\n    const {headers, settings} = opts;\n\n    self._request(\n      opts.requestMethod,\n      opts.host,\n      path,\n      opts.bodyData,\n      opts.auth,\n      {headers, settings},\n      requestCallback\n    );\n  });\n}\n\nmodule.exports = makeRequest;\n", "'use strict';\n\nconst makeRequest = require('./makeRequest');\nconst utils = require('./utils');\n\nfunction makeAutoPaginationMethods(self, requestArgs, spec, firstPagePromise) {\n  const promiseCache = {currentPromise: null};\n  const reverseIteration = isReverseIteration(requestArgs);\n  let listPromise = firstPagePromise;\n  let i = 0;\n\n  function iterate(listResult) {\n    if (\n      !(\n        listResult &&\n        listResult.data &&\n        typeof listResult.data.length === 'number'\n      )\n    ) {\n      throw Error(\n        'Unexpected: Stripe API response does not have a well-formed `data` array.'\n      );\n    }\n\n    if (i < listResult.data.length) {\n      const idx = reverseIteration ? listResult.data.length - 1 - i : i;\n      const value = listResult.data[idx];\n      i += 1;\n      return {value, done: false};\n    } else if (listResult.has_more) {\n      // Reset counter, request next page, and recurse.\n      i = 0;\n      const lastId = getLastId(listResult, reverseIteration);\n      listPromise = makeRequest(self, requestArgs, spec, {\n        [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n      });\n      return listPromise.then(iterate);\n    }\n    return {value: undefined, done: true};\n  }\n\n  function asyncIteratorNext() {\n    return memoizedPromise(promiseCache, (resolve, reject) => {\n      return listPromise\n        .then(iterate)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  const autoPagingEach = makeAutoPagingEach(asyncIteratorNext);\n  const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n\n  const autoPaginationMethods = {\n    autoPagingEach,\n    autoPagingToArray,\n\n    // Async iterator functions:\n    next: asyncIteratorNext,\n    return: () => {\n      // This is required for `break`.\n      return {};\n    },\n    [getAsyncIteratorSymbol()]: () => {\n      return autoPaginationMethods;\n    },\n  };\n  return autoPaginationMethods;\n}\n\nmodule.exports.makeAutoPaginationMethods = makeAutoPaginationMethods;\n\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\n\nfunction getAsyncIteratorSymbol() {\n  if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n    return Symbol.asyncIterator;\n  }\n  // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n  return '@@asyncIterator';\n}\n\nfunction getDoneCallback(args) {\n  if (args.length < 2) {\n    return undefined;\n  }\n  const onDone = args[1];\n  if (typeof onDone !== 'function') {\n    throw Error(\n      `The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`\n    );\n  }\n  return onDone;\n}\n\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n  if (args.length === 0) {\n    return undefined;\n  }\n  const onItem = args[0];\n  if (typeof onItem !== 'function') {\n    throw Error(\n      `The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`\n    );\n  }\n\n  // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n  if (onItem.length === 2) {\n    return onItem;\n  }\n\n  if (onItem.length > 2) {\n    throw Error(\n      `The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`\n    );\n  }\n\n  // This magically handles all three of these usecases (the latter two being functionally identical):\n  // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n  // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n  // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n  return function _onItem(item, next) {\n    const shouldContinue = onItem(item);\n    next(shouldContinue);\n  };\n}\n\nfunction getLastId(listResult, reverseIteration) {\n  const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n  const lastItem = listResult.data[lastIdx];\n  const lastId = lastItem && lastItem.id;\n  if (!lastId) {\n    throw Error(\n      'Unexpected: No `id` found on the last item while auto-paging a list.'\n    );\n  }\n  return lastId;\n}\n\n/**\n * If a user calls `.next()` multiple times in parallel,\n * return the same result until something has resolved\n * to prevent page-turning race conditions.\n */\nfunction memoizedPromise(promiseCache, cb) {\n  if (promiseCache.currentPromise) {\n    return promiseCache.currentPromise;\n  }\n  promiseCache.currentPromise = new Promise(cb).then((ret) => {\n    promiseCache.currentPromise = undefined;\n    return ret;\n  });\n  return promiseCache.currentPromise;\n}\n\nfunction makeAutoPagingEach(asyncIteratorNext) {\n  return function autoPagingEach(/* onItem?, onDone? */) {\n    const args = [].slice.call(arguments);\n    const onItem = getItemCallback(args);\n    const onDone = getDoneCallback(args);\n    if (args.length > 2) {\n      throw Error('autoPagingEach takes up to two arguments; received:', args);\n    }\n\n    const autoPagePromise = wrapAsyncIteratorWithCallback(\n      asyncIteratorNext,\n      onItem\n    );\n    return utils.callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n  };\n}\n\nfunction makeAutoPagingToArray(autoPagingEach) {\n  return function autoPagingToArray(opts, onDone) {\n    const limit = opts && opts.limit;\n    if (!limit) {\n      throw Error(\n        'You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.'\n      );\n    }\n    if (limit > 10000) {\n      throw Error(\n        'You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.'\n      );\n    }\n    const promise = new Promise((resolve, reject) => {\n      const items = [];\n      autoPagingEach((item) => {\n        items.push(item);\n        if (items.length >= limit) {\n          return false;\n        }\n      })\n        .then(() => {\n          resolve(items);\n        })\n        .catch(reject);\n    });\n    return utils.callbackifyPromiseWithTimeout(promise, onDone);\n  };\n}\n\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n  return new Promise((resolve, reject) => {\n    function handleIteration(iterResult) {\n      if (iterResult.done) {\n        resolve();\n        return;\n      }\n\n      const item = iterResult.value;\n      return new Promise((next) => {\n        // Bit confusing, perhaps; we pass a `resolve` fn\n        // to the user, so they can decide when and if to continue.\n        // They can return false, or a promise which resolves to false, to break.\n        onItem(item, next);\n      }).then((shouldContinue) => {\n        if (shouldContinue === false) {\n          return handleIteration({done: true});\n        } else {\n          return asyncIteratorNext().then(handleIteration);\n        }\n      });\n    }\n\n    asyncIteratorNext()\n      .then(handleIteration)\n      .catch(reject);\n  });\n}\n\nfunction isReverseIteration(requestArgs) {\n  const args = [].slice.call(requestArgs);\n  const dataFromArgs = utils.getDataFromArgs(args);\n\n  return !!dataFromArgs.ending_before;\n}\n", "'use strict';\n\nconst utils = require('./utils');\nconst makeRequest = require('./makeRequest');\nconst makeAutoPaginationMethods = require('./autoPagination')\n  .makeAutoPaginationMethods;\n\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\nfunction stripeMethod(spec) {\n  return function(...args) {\n    const callback = typeof args[args.length - 1] == 'function' && args.pop();\n\n    spec.urlParams = utils.extractUrlParams(\n      this.createResourcePathWithSymbols(spec.path || '')\n    );\n\n    const requestPromise = utils.callbackifyPromiseWithTimeout(\n      makeRequest(this, args, spec, {}),\n      callback\n    );\n\n    if (spec.methodType === 'list') {\n      const autoPaginationMethods = makeAutoPaginationMethods(\n        this,\n        args,\n        spec,\n        requestPromise\n      );\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;\n", "'use strict';\n\nconst stripeMethod = require('./StripeMethod');\n\nmodule.exports = {\n  create: stripeMethod({\n    method: 'POST',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    methodType: 'list',\n  }),\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '/{id}',\n  }),\n\n  update: stripeMethod({\n    method: 'POST',\n    path: '{id}',\n  }),\n\n  // Avoid 'delete' keyword in JS\n  del: stripeMethod({\n    method: 'DELETE',\n    path: '{id}',\n  }),\n};\n", "'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst path = require('path');\n\nconst utils = require('./utils');\nconst {\n  StripeConnectionError,\n  StripeAuthenticationError,\n  StripePermissionError,\n  StripeRateLimitError,\n  StripeError,\n  StripeAPIError,\n} = require('./Error');\n\nconst defaultHttpAgent = new http.Agent({keepAlive: true});\nconst defaultHttpsAgent = new https.Agent({keepAlive: true});\n\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = utils.protoExtend;\n\n// Expose method-creator & prepared (basic) methods\nStripeResource.method = require('./StripeMethod');\nStripeResource.BASIC_METHODS = require('./StripeMethod.basic');\n\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\nconst MAX_RETRY_AFTER_WAIT = 60;\n\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n  this._stripe = stripe;\n  if (deprecatedUrlData) {\n    throw new Error(\n      'Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.'\n    );\n  }\n\n  this.basePath = utils.makeURLInterpolator(\n    this.basePath || stripe.getApiField('basePath')\n  );\n  this.resourcePath = this.path;\n  this.path = utils.makeURLInterpolator(this.path);\n\n  if (this.includeBasic) {\n    this.includeBasic.forEach(function(methodName) {\n      this[methodName] = StripeResource.BASIC_METHODS[methodName];\n    }, this);\n  }\n\n  this.initialize(...arguments);\n}\n\nStripeResource.prototype = {\n  path: '',\n\n  // Methods that don't use the API's default '/v1' path can override it with this setting.\n  basePath: null,\n\n  initialize() {},\n\n  // Function to override the default data processor. This allows full control\n  // over how a StripeResource's request data will get converted into an HTTP\n  // body. This is useful for non-standard HTTP requests. The function should\n  // take method name, data, and headers as arguments.\n  requestDataProcessor: null,\n\n  // Function to add a validation checks before sending the request, errors should\n  // be thrown, and they will be passed to the callback/promise.\n  validateRequest: null,\n\n  createFullPath(commandPath, urlData) {\n    return path\n      .join(\n        this.basePath(urlData),\n        this.path(urlData),\n        typeof commandPath == 'function' ? commandPath(urlData) : commandPath\n      )\n      .replace(/\\\\/g, '/'); // ugly workaround for Windows\n  },\n\n  // Creates a relative resource path with symbols left in (unlike\n  // createFullPath which takes some data to replace them with). For example it\n  // might produce: /invoices/{id}\n  createResourcePathWithSymbols(pathWithSymbols) {\n    return `/${path\n      .join(this.resourcePath, pathWithSymbols || '')\n      .replace(/\\\\/g, '/')}`; // ugly workaround for Windows\n  },\n\n  // DEPRECATED: Here for backcompat in case users relied on this.\n  wrapTimeout: utils.callbackifyPromiseWithTimeout,\n\n  _timeoutHandler(timeout, req, callback) {\n    return () => {\n      const timeoutErr = new TypeError('ETIMEDOUT');\n      timeoutErr.code = 'ETIMEDOUT';\n\n      req._isAborted = true;\n      req.abort();\n\n      callback.call(\n        this,\n        new StripeConnectionError({\n          message: `Request aborted due to timeout being reached (${timeout}ms)`,\n          detail: timeoutErr,\n        }),\n        null\n      );\n    };\n  },\n\n  _responseHandler(req, callback) {\n    return (res) => {\n      let response = '';\n\n      res.setEncoding('utf8');\n      res.on('data', (chunk) => {\n        response += chunk;\n      });\n      res.once('end', () => {\n        const headers = res.headers || {};\n        // NOTE: Stripe responds with lowercase header names/keys.\n\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        res.requestId = headers['request-id'];\n\n        const stripeAccount = headers['stripe-account'];\n        if (stripeAccount) {\n          res.stripeAccount = stripeAccount;\n        }\n\n        const apiVersion = headers['stripe-version'];\n        if (apiVersion) {\n          res.apiVersion = apiVersion;\n        }\n\n        const idempotencyKey = headers['idempotency-key'];\n        if (idempotencyKey) {\n          res.idempotencyKey = idempotencyKey;\n        }\n\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - req._requestStart;\n\n        const responseEvent = utils.removeNullish({\n          api_version: headers['stripe-version'],\n          account: headers['stripe-account'],\n          idempotency_key: headers['idempotency-key'],\n          method: req._requestEvent.method,\n          path: req._requestEvent.path,\n          status: res.statusCode,\n          request_id: res.requestId,\n          elapsed: requestDurationMs,\n          request_start_time: req._requestStart,\n          request_end_time: requestEndTime,\n        });\n\n        this._stripe._emitter.emit('response', responseEvent);\n\n        try {\n          response = JSON.parse(response);\n\n          if (response.error) {\n            let err;\n\n            // Convert OAuth error responses into a standard format\n            // so that the rest of the error logic can be shared\n            if (typeof response.error === 'string') {\n              response.error = {\n                type: response.error,\n                message: response.error_description,\n              };\n            }\n\n            response.error.headers = headers;\n            response.error.statusCode = res.statusCode;\n            response.error.requestId = res.requestId;\n\n            if (res.statusCode === 401) {\n              err = new StripeAuthenticationError(response.error);\n            } else if (res.statusCode === 403) {\n              err = new StripePermissionError(response.error);\n            } else if (res.statusCode === 429) {\n              err = new StripeRateLimitError(response.error);\n            } else {\n              err = StripeError.generate(response.error);\n            }\n            return callback.call(this, err, null);\n          }\n        } catch (e) {\n          return callback.call(\n            this,\n            new StripeAPIError({\n              message: 'Invalid JSON received from the Stripe API',\n              response,\n              exception: e,\n              requestId: headers['request-id'],\n            }),\n            null\n          );\n        }\n\n        this._recordRequestMetrics(res.requestId, requestDurationMs);\n\n        // Expose res object\n        Object.defineProperty(response, 'lastResponse', {\n          enumerable: false,\n          writable: false,\n          value: res,\n        });\n        callback.call(this, null, response);\n      });\n    };\n  },\n\n  _generateConnectionErrorMessage(requestRetries) {\n    return `An error occurred with our connection to Stripe.${\n      requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''\n    }`;\n  },\n\n  _errorHandler(req, requestRetries, callback) {\n    return (error) => {\n      if (req._isAborted) {\n        // already handled\n        return;\n      }\n      callback.call(\n        this,\n        new StripeConnectionError({\n          message: this._generateConnectionErrorMessage(requestRetries),\n          detail: error,\n        }),\n        null\n      );\n    };\n  },\n\n  // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n  _shouldRetry(res, numRetries, maxRetries) {\n    // Do not retry if we are out of retries.\n    if (numRetries >= maxRetries) {\n      return false;\n    }\n\n    // Retry on connection error.\n    if (!res) {\n      return true;\n    }\n\n    // The API may ask us not to retry (e.g., if doing so would be a no-op)\n    // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n    if (res.headers && res.headers['stripe-should-retry'] === 'false') {\n      return false;\n    }\n    if (res.headers && res.headers['stripe-should-retry'] === 'true') {\n      return true;\n    }\n\n    // Retry on conflict errors.\n    if (res.statusCode === 409) {\n      return true;\n    }\n\n    // Retry on 500, 503, and other internal errors.\n    //\n    // Note that we expect the stripe-should-retry header to be false\n    // in most cases when a 500 is returned, since our idempotency framework\n    // would typically replay it anyway.\n    if (res.statusCode >= 500) {\n      return true;\n    }\n\n    return false;\n  },\n\n  _getSleepTimeInMS(numRetries, retryAfter = null) {\n    const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n    const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n\n    // Apply exponential backoff with initialNetworkRetryDelay on the\n    // number of numRetries so far as inputs. Do not allow the number to exceed\n    // maxNetworkRetryDelay.\n    let sleepSeconds = Math.min(\n      initialNetworkRetryDelay * Math.pow(numRetries - 1, 2),\n      maxNetworkRetryDelay\n    );\n\n    // Apply some jitter by randomizing the value in the range of\n    // (sleepSeconds / 2) to (sleepSeconds).\n    sleepSeconds *= 0.5 * (1 + Math.random());\n\n    // But never sleep less than the base sleep seconds.\n    sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n\n    // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n    if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n      sleepSeconds = Math.max(sleepSeconds, retryAfter);\n    }\n\n    return sleepSeconds * 1000;\n  },\n\n  // Max retries can be set on a per request basis. Favor those over the global setting\n  _getMaxNetworkRetries(settings = {}) {\n    return settings.maxNetworkRetries &&\n      Number.isInteger(settings.maxNetworkRetries)\n      ? settings.maxNetworkRetries\n      : this._stripe.getMaxNetworkRetries();\n  },\n\n  _defaultIdempotencyKey(method, settings) {\n    // If this is a POST and we allow multiple retries, ensure an idempotency key.\n    const maxRetries = this._getMaxNetworkRetries(settings);\n\n    if (method === 'POST' && maxRetries > 0) {\n      return `stripe-node-retry-${utils.uuid4()}`;\n    }\n    return null;\n  },\n\n  _makeHeaders(\n    auth,\n    contentLength,\n    apiVersion,\n    clientUserAgent,\n    method,\n    userSuppliedHeaders,\n    userSuppliedSettings\n  ) {\n    const defaultHeaders = {\n      // Use specified auth token or use default from this stripe instance:\n      Authorization: auth ? `Bearer ${auth}` : this._stripe.getApiField('auth'),\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Content-Length': contentLength,\n      'User-Agent': this._getUserAgentString(),\n      'X-Stripe-Client-User-Agent': clientUserAgent,\n      'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n      'Stripe-Version': apiVersion,\n      'Idempotency-Key': this._defaultIdempotencyKey(\n        method,\n        userSuppliedSettings\n      ),\n    };\n\n    return Object.assign(\n      utils.removeNullish(defaultHeaders),\n      // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n      utils.normalizeHeaders(userSuppliedHeaders)\n    );\n  },\n\n  _getUserAgentString() {\n    const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n    const appInfo = this._stripe._appInfo\n      ? this._stripe.getAppInfoAsString()\n      : '';\n\n    return `Stripe/v1 NodeBindings/${packageVersion} ${appInfo}`.trim();\n  },\n\n  _getTelemetryHeader() {\n    if (\n      this._stripe.getTelemetryEnabled() &&\n      this._stripe._prevRequestMetrics.length > 0\n    ) {\n      const metrics = this._stripe._prevRequestMetrics.shift();\n      return JSON.stringify({\n        last_request_metrics: metrics,\n      });\n    }\n  },\n\n  _recordRequestMetrics(requestId, requestDurationMs) {\n    if (this._stripe.getTelemetryEnabled() && requestId) {\n      if (\n        this._stripe._prevRequestMetrics.length >\n        StripeResource.MAX_BUFFERED_REQUEST_METRICS\n      ) {\n        utils.emitWarning(\n          'Request metrics buffer is full, dropping telemetry message.'\n        );\n      } else {\n        this._stripe._prevRequestMetrics.push({\n          request_id: requestId,\n          request_duration_ms: requestDurationMs,\n        });\n      }\n    }\n  },\n\n  _request(method, host, path, data, auth, options = {}, callback) {\n    let requestData;\n\n    const retryRequest = (\n      requestFn,\n      apiVersion,\n      headers,\n      requestRetries,\n      retryAfter\n    ) => {\n      return setTimeout(\n        requestFn,\n        this._getSleepTimeInMS(requestRetries, retryAfter),\n        apiVersion,\n        headers,\n        requestRetries + 1\n      );\n    };\n\n    const makeRequest = (apiVersion, headers, numRetries) => {\n      // timeout can be set on a per-request basis. Favor that over the global setting\n      const timeout =\n        options.settings &&\n        Number.isInteger(options.settings.timeout) &&\n        options.settings.timeout >= 0\n          ? options.settings.timeout\n          : this._stripe.getApiField('timeout');\n\n      const isInsecureConnection =\n        this._stripe.getApiField('protocol') === 'http';\n      let agent = this._stripe.getApiField('agent');\n      if (agent == null) {\n        agent = isInsecureConnection ? defaultHttpAgent : defaultHttpsAgent;\n      }\n\n      const req = (isInsecureConnection ? http : https).request({\n        host: host || this._stripe.getApiField('host'),\n        port: this._stripe.getApiField('port'),\n        path,\n        method,\n        agent,\n        headers,\n        ciphers: 'DEFAULT:!aNULL:!eNULL:!LOW:!EXPORT:!SSLv2:!MD5',\n      });\n\n      const requestStartTime = Date.now();\n\n      const requestEvent = utils.removeNullish({\n        api_version: apiVersion,\n        account: headers['Stripe-Account'],\n        idempotency_key: headers['Idempotency-Key'],\n        method,\n        path,\n        request_start_time: requestStartTime,\n      });\n\n      const requestRetries = numRetries || 0;\n\n      const maxRetries = this._getMaxNetworkRetries(options.settings);\n\n      req._requestEvent = requestEvent;\n\n      req._requestStart = requestStartTime;\n\n      this._stripe._emitter.emit('request', requestEvent);\n\n      req.setTimeout(timeout, this._timeoutHandler(timeout, req, callback));\n\n      req.once('response', (res) => {\n        if (this._shouldRetry(res, requestRetries, maxRetries)) {\n          return retryRequest(\n            makeRequest,\n            apiVersion,\n            headers,\n            requestRetries,\n            ((res || {}).headers || {})['retry-after']\n          );\n        } else {\n          return this._responseHandler(req, callback)(res);\n        }\n      });\n\n      req.on('error', (error) => {\n        if (this._shouldRetry(null, requestRetries, maxRetries)) {\n          return retryRequest(\n            makeRequest,\n            apiVersion,\n            headers,\n            requestRetries,\n            null\n          );\n        } else {\n          return this._errorHandler(req, requestRetries, callback)(error);\n        }\n      });\n\n      req.once('socket', (socket) => {\n        if (socket.connecting) {\n          socket.once(\n            isInsecureConnection ? 'connect' : 'secureConnect',\n            () => {\n              // Send payload; we're safe:\n              req.write(requestData);\n              req.end();\n            }\n          );\n        } else {\n          // we're already connected\n          req.write(requestData);\n          req.end();\n        }\n      });\n    };\n\n    const prepareAndMakeRequest = (error, data) => {\n      if (error) {\n        return callback(error);\n      }\n\n      requestData = data;\n\n      this._stripe.getClientUserAgent((clientUserAgent) => {\n        const apiVersion = this._stripe.getApiField('version');\n        const headers = this._makeHeaders(\n          auth,\n          requestData.length,\n          apiVersion,\n          clientUserAgent,\n          method,\n          options.headers,\n          options.settings\n        );\n\n        makeRequest(apiVersion, headers);\n      });\n    };\n\n    if (this.requestDataProcessor) {\n      this.requestDataProcessor(\n        method,\n        data,\n        options.headers,\n        prepareAndMakeRequest\n      );\n    } else {\n      prepareAndMakeRequest(null, utils.stringifyRequestData(data || {}));\n    }\n  },\n};\n\nmodule.exports = StripeResource;\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\n// Since path can either be `account` or `accounts`, support both through stripeMethod path;\nmodule.exports = StripeResource.extend({\n  path: '',\n\n  create: stripeMethod({\n    method: 'POST',\n    path: 'accounts',\n  }),\n\n  retrieve(id) {\n    // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n    // old account ids and api keys. To request the account for an api key, send null as the id\n    if (typeof id === 'string') {\n      return stripeMethod({\n        method: 'GET',\n        path: 'accounts/{id}',\n      }).apply(this, arguments);\n    } else {\n      if (id === null || id === undefined) {\n        // Remove id as stripeMethod would complain of unexpected argument\n        [].shift.apply(arguments);\n      }\n      return stripeMethod({\n        method: 'GET',\n        path: 'account',\n      }).apply(this, arguments);\n    }\n  },\n\n  update: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}',\n  }),\n\n  list: stripeMethod({\n    method: 'GET',\n    path: 'accounts',\n    methodType: 'list',\n  }),\n\n  del: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}',\n  }),\n\n  reject: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/reject',\n  }),\n\n  retrieveCapability: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/capabilities/{capability}',\n  }),\n\n  updateCapability: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/capabilities/{capability}',\n  }),\n\n  listCapabilities: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/capabilities',\n    methodType: 'list',\n  }),\n\n  createExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/external_accounts',\n  }),\n\n  retrieveExternalAccount: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  updateExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  listExternalAccounts: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/external_accounts',\n    methodType: 'list',\n  }),\n\n  deleteExternalAccount: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}/external_accounts/{id}',\n  }),\n\n  createLoginLink: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/login_links',\n  }),\n\n  createPerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/persons',\n  }),\n\n  retrievePerson: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n\n  updatePerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n\n  listPersons: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{account}/persons',\n    methodType: 'list',\n  }),\n\n  deletePerson: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{account}/persons/{person}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'account_links',\n\n  includeBasic: ['create'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'apple_pay/domains',\n\n  includeBasic: ['create', 'retrieve', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'application_fees',\n\n  includeBasic: ['retrieve', 'list'],\n\n  createRefund: stripeMethod({\n    method: 'POST',\n    path: '/{id}/refunds',\n  }),\n\n  retrieveRefund: stripeMethod({\n    method: 'GET',\n    path: '/{fee}/refunds/{id}',\n  }),\n\n  updateRefund: stripeMethod({\n    method: 'POST',\n    path: '/{fee}/refunds/{id}',\n  }),\n\n  listRefunds: stripeMethod({\n    method: 'GET',\n    path: '/{id}/refunds',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'balance',\n\n  retrieve: stripeMethod({\n    method: 'GET',\n    path: '',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'balance_transactions',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'charges',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  capture: stripeMethod({\n    method: 'POST',\n    path: '/{charge}/capture',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'country_specs',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'coupons',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'credit_notes',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  preview: stripeMethod({\n    method: 'GET',\n    path: '/preview',\n  }),\n\n  voidCreditNote: stripeMethod({\n    method: 'POST',\n    path: '/{id}/void',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{creditNote}/lines',\n    methodType: 'list',\n  }),\n\n  listPreviewLineItems: stripeMethod({\n    method: 'GET',\n    path: '/preview/lines',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'customers',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/discount',\n  }),\n\n  createBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions',\n  }),\n\n  retrieveBalanceTransaction: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  updateBalanceTransaction: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/balance_transactions/{transaction}',\n  }),\n\n  listBalanceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/balance_transactions',\n    methodType: 'list',\n  }),\n\n  createSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources',\n  }),\n\n  retrieveSource: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  updateSource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  listSources: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/sources',\n    methodType: 'list',\n  }),\n\n  deleteSource: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/sources/{id}',\n  }),\n\n  verifySource: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/sources/{id}/verify',\n  }),\n\n  createTaxId: stripeMethod({\n    method: 'POST',\n    path: '/{customer}/tax_ids',\n  }),\n\n  retrieveTaxId: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n\n  listTaxIds: stripeMethod({\n    method: 'GET',\n    path: '/{customer}/tax_ids',\n    methodType: 'list',\n  }),\n\n  deleteTaxId: stripeMethod({\n    method: 'DELETE',\n    path: '/{customer}/tax_ids/{id}',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'disputes',\n\n  includeBasic: ['retrieve', 'update', 'list'],\n\n  close: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}/close',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'ephemeral_keys',\n\n  includeBasic: ['del'],\n\n  create: stripeMethod({\n    method: 'POST',\n    path: '',\n    validator: (data, options) => {\n      if (!options.headers || !options.headers['Stripe-Version']) {\n        throw new Error(\n          'stripe_version must be specified to create an ephemeral key'\n        );\n      }\n    },\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'events',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'exchange_rates',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "'use strict';\n\nconst utils = require('./utils');\nconst {StripeError} = require('./Error');\n\nclass StreamProcessingError extends StripeError {}\n\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n  const segno = (\n    Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)\n  ).toString();\n  headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n  let buffer = Buffer.alloc(0);\n\n  function push(l) {\n    const prevBuffer = buffer;\n    const newBuffer = l instanceof Buffer ? l : Buffer.from(l);\n    buffer = Buffer.alloc(prevBuffer.length + newBuffer.length + 2);\n    prevBuffer.copy(buffer);\n    newBuffer.copy(buffer, prevBuffer.length);\n    buffer.write('\\r\\n', buffer.length - 2);\n  }\n\n  function q(s) {\n    return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n  }\n\n  const flattenedData = utils.flattenAndStringify(data);\n\n  for (const k in flattenedData) {\n    const v = flattenedData[k];\n    push(`--${segno}`);\n    if (v.hasOwnProperty('data')) {\n      push(\n        `Content-Disposition: form-data; name=${q(k)}; filename=${q(\n          v.name || 'blob'\n        )}`\n      );\n      push(`Content-Type: ${v.type || 'application/octet-stream'}`);\n      push('');\n      push(v.data);\n    } else {\n      push(`Content-Disposition: form-data; name=${q(k)}`);\n      push('');\n      push(v);\n    }\n  }\n  push(`--${segno}--`);\n\n  return buffer;\n};\n\nconst streamProcessor = (method, data, headers, callback) => {\n  const bufferArray = [];\n  data.file.data\n    .on('data', (line) => {\n      bufferArray.push(line);\n    })\n    .once('end', () => {\n      const bufferData = Object.assign({}, data);\n      bufferData.file.data = Buffer.concat(bufferArray);\n      const buffer = multipartDataGenerator(method, bufferData, headers);\n      callback(null, buffer);\n    })\n    .on('error', (err) => {\n      callback(\n        new StreamProcessingError({\n          message:\n            'An error occurred while attempting to process the file for upload.',\n          detail: err,\n        }),\n        null\n      );\n    });\n};\n\nconst multipartRequestDataProcessor = (method, data, headers, callback) => {\n  data = data || {};\n\n  if (method !== 'POST') {\n    return callback(null, utils.stringifyRequestData(data));\n  }\n\n  const isStream = utils.checkForStream(data);\n  if (isStream) {\n    return streamProcessor(method, data, headers, callback);\n  }\n\n  const buffer = multipartDataGenerator(method, data, headers);\n  return callback(null, buffer);\n};\n\nmodule.exports.multipartRequestDataProcessor = multipartRequestDataProcessor;\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst {multipartRequestDataProcessor} = require('../multipart');\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'files',\n\n  includeBasic: ['retrieve', 'list'],\n\n  create: stripeMethod({\n    method: 'POST',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    host: 'files.stripe.com',\n  }),\n\n  requestDataProcessor: multipartRequestDataProcessor,\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'file_links',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'invoices',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n\n  finalizeInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/finalize',\n  }),\n\n  markUncollectible: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/mark_uncollectible',\n  }),\n\n  pay: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/pay',\n  }),\n\n  retrieveUpcoming: stripeMethod({\n    method: 'GET',\n    path: '/upcoming',\n  }),\n\n  sendInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/send',\n  }),\n\n  voidInvoice: stripeMethod({\n    method: 'POST',\n    path: '/{invoice}/void',\n  }),\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{invoice}/lines',\n    methodType: 'list',\n  }),\n\n  listUpcomingLineItems: stripeMethod({\n    method: 'GET',\n    path: '/upcoming/lines',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'invoiceitems',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'issuer_fraud_records',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'mandates',\n\n  includeBasic: ['retrieve'],\n});\n", "'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nconst utils = require('../utils');\n\nconst oAuthHost = 'connect.stripe.com';\n\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n\n    let path = 'oauth/authorize';\n\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return `https://${oAuthHost}/${path}?${utils.stringifyRequestData(params)}`;\n  },\n\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost,\n  }),\n\n  deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost,\n    }).apply(this, arguments);\n  },\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'orders',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  pay: stripeMethod({\n    method: 'POST',\n    path: '/{id}/pay',\n  }),\n\n  returnOrder: stripeMethod({\n    method: 'POST',\n    path: '/{id}/returns',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'order_returns',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payment_intents',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/cancel',\n  }),\n\n  capture: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/capture',\n  }),\n\n  confirm: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/confirm',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payment_methods',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  attach: stripeMethod({\n    method: 'POST',\n    path: '/{paymentMethod}/attach',\n  }),\n\n  detach: stripeMethod({\n    method: 'POST',\n    path: '/{paymentMethod}/detach',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'payouts',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{payout}/cancel',\n  }),\n\n  reverse: stripeMethod({\n    method: 'POST',\n    path: '/{payout}/reverse',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'plans',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'prices',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'products',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'promotion_codes',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'refunds',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'reviews',\n\n  includeBasic: ['retrieve', 'list'],\n\n  approve: stripeMethod({\n    method: 'POST',\n    path: '/{review}/approve',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'setup_attempts',\n\n  includeBasic: ['list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'setup_intents',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/cancel',\n  }),\n\n  confirm: stripeMethod({\n    method: 'POST',\n    path: '/{intent}/confirm',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'skus',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'sources',\n\n  includeBasic: ['create', 'retrieve', 'update'],\n\n  listSourceTransactions: stripeMethod({\n    method: 'GET',\n    path: '/{source}/source_transactions',\n    methodType: 'list',\n  }),\n\n  verify: stripeMethod({\n    method: 'POST',\n    path: '/{source}/verify',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscriptions',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{subscriptionExposedId}/discount',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscription_items',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n\n  createUsageRecord: stripeMethod({\n    method: 'POST',\n    path: '/{subscriptionItem}/usage_records',\n  }),\n\n  listUsageRecordSummaries: stripeMethod({\n    method: 'GET',\n    path: '/{subscriptionItem}/usage_record_summaries',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'subscription_schedules',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{schedule}/cancel',\n  }),\n\n  release: stripeMethod({\n    method: 'POST',\n    path: '/{schedule}/release',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'tax_rates',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'tokens',\n\n  includeBasic: ['create', 'retrieve'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'topups',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  cancel: stripeMethod({\n    method: 'POST',\n    path: '/{topup}/cancel',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'transfers',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  createReversal: stripeMethod({\n    method: 'POST',\n    path: '/{id}/reversals',\n  }),\n\n  retrieveReversal: stripeMethod({\n    method: 'GET',\n    path: '/{transfer}/reversals/{id}',\n  }),\n\n  updateReversal: stripeMethod({\n    method: 'POST',\n    path: '/{transfer}/reversals/{id}',\n  }),\n\n  listReversals: stripeMethod({\n    method: 'GET',\n    path: '/{id}/reversals',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'webhook_endpoints',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'billing_portal/sessions',\n\n  includeBasic: ['create'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'checkout/sessions',\n\n  includeBasic: ['create', 'retrieve', 'list'],\n\n  listLineItems: stripeMethod({\n    method: 'GET',\n    path: '/{session}/line_items',\n    methodType: 'list',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/authorizations',\n\n  includeBasic: ['retrieve', 'update', 'list'],\n\n  approve: stripeMethod({\n    method: 'POST',\n    path: '/{authorization}/approve',\n  }),\n\n  decline: stripeMethod({\n    method: 'POST',\n    path: '/{authorization}/decline',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/cards',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  retrieveDetails: stripeMethod({\n    method: 'GET',\n    path: '/{card}/details',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/cardholders',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\nconst stripeMethod = StripeResource.method;\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/disputes',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list'],\n\n  submit: stripeMethod({\n    method: 'POST',\n    path: '/{dispute}/submit',\n  }),\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'issuing/transactions',\n\n  includeBasic: ['retrieve', 'update', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/early_fraud_warnings',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/value_lists',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'radar/value_list_items',\n\n  includeBasic: ['create', 'retrieve', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'reporting/report_runs',\n\n  includeBasic: ['create', 'retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'reporting/report_types',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'sigma/scheduled_query_runs',\n\n  includeBasic: ['retrieve', 'list'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/connection_tokens',\n\n  includeBasic: ['create'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/locations',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst StripeResource = require('../../StripeResource');\n\nmodule.exports = StripeResource.extend({\n  path: 'terminal/readers',\n\n  includeBasic: ['create', 'retrieve', 'update', 'list', 'del'],\n});\n", "// File generated from our OpenAPI spec\n\n'use strict';\n\nconst resourceNamespace = require('./ResourceNamespace');\n\nmodule.exports = {\n  Accounts: require('./resources/Accounts'),\n  // Support Accounts for consistency, Account for backwards compatibility\n  Account: require('./resources/Accounts'),\n  AccountLinks: require('./resources/AccountLinks'),\n  ApplePayDomains: require('./resources/ApplePayDomains'),\n  ApplicationFees: require('./resources/ApplicationFees'),\n  Balance: require('./resources/Balance'),\n  BalanceTransactions: require('./resources/BalanceTransactions'),\n  Charges: require('./resources/Charges'),\n  CountrySpecs: require('./resources/CountrySpecs'),\n  Coupons: require('./resources/Coupons'),\n  CreditNotes: require('./resources/CreditNotes'),\n  Customers: require('./resources/Customers'),\n  Disputes: require('./resources/Disputes'),\n  EphemeralKeys: require('./resources/EphemeralKeys'),\n  Events: require('./resources/Events'),\n  ExchangeRates: require('./resources/ExchangeRates'),\n  Files: require('./resources/Files'),\n  FileLinks: require('./resources/FileLinks'),\n  Invoices: require('./resources/Invoices'),\n  InvoiceItems: require('./resources/InvoiceItems'),\n  IssuerFraudRecords: require('./resources/IssuerFraudRecords'),\n  Mandates: require('./resources/Mandates'),\n  OAuth: require('./resources/OAuth'),\n  Orders: require('./resources/Orders'),\n  OrderReturns: require('./resources/OrderReturns'),\n  PaymentIntents: require('./resources/PaymentIntents'),\n  PaymentMethods: require('./resources/PaymentMethods'),\n  Payouts: require('./resources/Payouts'),\n  Plans: require('./resources/Plans'),\n  Prices: require('./resources/Prices'),\n  Products: require('./resources/Products'),\n  PromotionCodes: require('./resources/PromotionCodes'),\n  Refunds: require('./resources/Refunds'),\n  Reviews: require('./resources/Reviews'),\n  SetupAttempts: require('./resources/SetupAttempts'),\n  SetupIntents: require('./resources/SetupIntents'),\n  Skus: require('./resources/SKUs'),\n  Sources: require('./resources/Sources'),\n  Subscriptions: require('./resources/Subscriptions'),\n  SubscriptionItems: require('./resources/SubscriptionItems'),\n  SubscriptionSchedules: require('./resources/SubscriptionSchedules'),\n  TaxRates: require('./resources/TaxRates'),\n  Tokens: require('./resources/Tokens'),\n  Topups: require('./resources/Topups'),\n  Transfers: require('./resources/Transfers'),\n  WebhookEndpoints: require('./resources/WebhookEndpoints'),\n  BillingPortal: resourceNamespace('billingPortal', {\n    Sessions: require('./resources/BillingPortal/Sessions'),\n  }),\n  Checkout: resourceNamespace('checkout', {\n    Sessions: require('./resources/Checkout/Sessions'),\n  }),\n  Issuing: resourceNamespace('issuing', {\n    Authorizations: require('./resources/Issuing/Authorizations'),\n    Cards: require('./resources/Issuing/Cards'),\n    Cardholders: require('./resources/Issuing/Cardholders'),\n    Disputes: require('./resources/Issuing/Disputes'),\n    Transactions: require('./resources/Issuing/Transactions'),\n  }),\n  Radar: resourceNamespace('radar', {\n    EarlyFraudWarnings: require('./resources/Radar/EarlyFraudWarnings'),\n    ValueLists: require('./resources/Radar/ValueLists'),\n    ValueListItems: require('./resources/Radar/ValueListItems'),\n  }),\n  Reporting: resourceNamespace('reporting', {\n    ReportRuns: require('./resources/Reporting/ReportRuns'),\n    ReportTypes: require('./resources/Reporting/ReportTypes'),\n  }),\n  Sigma: resourceNamespace('sigma', {\n    ScheduledQueryRuns: require('./resources/Sigma/ScheduledQueryRuns'),\n  }),\n  Terminal: resourceNamespace('terminal', {\n    ConnectionTokens: require('./resources/Terminal/ConnectionTokens'),\n    Locations: require('./resources/Terminal/Locations'),\n    Readers: require('./resources/Terminal/Readers'),\n  }),\n};\n", "'use strict';\n\nconst crypto = require('crypto');\n\nconst utils = require('./utils');\nconst {StripeError, StripeSignatureVerificationError} = require('./Error');\n\nconst Webhook = {\n  DEFAULT_TOLERANCE: 300, // 5 minutes\n\n  constructEvent(payload, header, secret, tolerance) {\n    this.signature.verifyHeader(\n      payload,\n      header,\n      secret,\n      tolerance || Webhook.DEFAULT_TOLERANCE\n    );\n\n    const jsonPayload = JSON.parse(payload);\n    return jsonPayload;\n  },\n\n  /**\n   * Generates a header to be used for webhook mocking\n   *\n   * @typedef {object} opts\n   * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n   * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n   * @property {string} secret - Stripe webhook secret 'whsec_...'\n   * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n   * @property {string} signature - Computed webhook signature\n   */\n  generateTestHeaderString: function(opts) {\n    if (!opts) {\n      throw new StripeError({\n        message: 'Options are required',\n      });\n    }\n\n    opts.timestamp =\n      Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n    opts.scheme = opts.scheme || signature.EXPECTED_SCHEME;\n\n    opts.signature =\n      opts.signature ||\n      signature._computeSignature(\n        opts.timestamp + '.' + opts.payload,\n        opts.secret\n      );\n\n    const generatedHeader = [\n      't=' + opts.timestamp,\n      opts.scheme + '=' + opts.signature,\n    ].join(',');\n\n    return generatedHeader;\n  },\n};\n\nconst signature = {\n  EXPECTED_SCHEME: 'v1',\n\n  _computeSignature: (payload, secret) => {\n    return crypto\n      .createHmac('sha256', secret)\n      .update(payload, 'utf8')\n      .digest('hex');\n  },\n\n  verifyHeader(payload, header, secret, tolerance) {\n    payload = Buffer.isBuffer(payload) ? payload.toString('utf8') : payload;\n\n    // Express's type for `Request#headers` is `string | []string`\n    // which is because the `set-cookie` header is an array,\n    // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n    // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n    if (Array.isArray(header)) {\n      throw new Error(\n        'Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.'\n      );\n    }\n\n    header = Buffer.isBuffer(header) ? header.toString('utf8') : header;\n\n    const details = parseHeader(header, this.EXPECTED_SCHEME);\n\n    if (!details || details.timestamp === -1) {\n      throw new StripeSignatureVerificationError({\n        message: 'Unable to extract timestamp and signatures from header',\n        detail: {\n          header,\n          payload,\n        },\n      });\n    }\n\n    if (!details.signatures.length) {\n      throw new StripeSignatureVerificationError({\n        message: 'No signatures found with expected scheme',\n        detail: {\n          header,\n          payload,\n        },\n      });\n    }\n\n    const expectedSignature = this._computeSignature(\n      `${details.timestamp}.${payload}`,\n      secret\n    );\n\n    const signatureFound = !!details.signatures.filter(\n      utils.secureCompare.bind(utils, expectedSignature)\n    ).length;\n\n    if (!signatureFound) {\n      throw new StripeSignatureVerificationError({\n        message:\n          'No signatures found matching the expected signature for payload.' +\n          ' Are you passing the raw request body you received from Stripe?' +\n          ' https://github.com/stripe/stripe-node#webhook-signing',\n        detail: {\n          header,\n          payload,\n        },\n      });\n    }\n\n    const timestampAge = Math.floor(Date.now() / 1000) - details.timestamp;\n\n    if (tolerance > 0 && timestampAge > tolerance) {\n      throw new StripeSignatureVerificationError({\n        message: 'Timestamp outside the tolerance zone',\n        detail: {\n          header,\n          payload,\n        },\n      });\n    }\n\n    return true;\n  },\n};\n\nfunction parseHeader(header, scheme) {\n  if (typeof header !== 'string') {\n    return null;\n  }\n\n  return header.split(',').reduce(\n    (accum, item) => {\n      const kv = item.split('=');\n\n      if (kv[0] === 't') {\n        accum.timestamp = kv[1];\n      }\n\n      if (kv[0] === scheme) {\n        accum.signatures.push(kv[1]);\n      }\n\n      return accum;\n    },\n    {\n      timestamp: -1,\n      signatures: [],\n    }\n  );\n}\n\nWebhook.signature = signature;\n\nmodule.exports = Webhook;\n", "'use strict';\n\nconst resources = require('./resources');\n\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = null;\n\nconst DEFAULT_TIMEOUT = 80000;\n\nStripe.PACKAGE_VERSION = require('../package.json').version;\n\nStripe.USER_AGENT = {\n  bindings_version: Stripe.PACKAGE_VERSION,\n  lang: 'node',\n  lang_version: process.version,\n  platform: process.platform,\n  publisher: 'stripe',\n  uname: null,\n  typescript: false,\n};\n\nStripe.USER_AGENT_SERIALIZED = null;\n\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\n\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n  'apiVersion',\n  'typescript',\n  'maxNetworkRetries',\n  'httpAgent',\n  'timeout',\n  'host',\n  'port',\n  'protocol',\n  'telemetry',\n  'appInfo',\n];\n\nconst EventEmitter = require('events').EventEmitter;\nconst utils = require('./utils');\nconst {emitWarning} = utils;\n\nStripe.StripeResource = require('./StripeResource');\nStripe.resources = resources;\n\nfunction Stripe(key, config = {}) {\n  if (!(this instanceof Stripe)) {\n    return new Stripe(key, config);\n  }\n\n  const props = this._getPropsFromConfig(config);\n\n  Object.defineProperty(this, '_emitter', {\n    value: new EventEmitter(),\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  });\n\n  this.VERSION = Stripe.PACKAGE_VERSION;\n\n  this.on = this._emitter.on.bind(this._emitter);\n  this.once = this._emitter.once.bind(this._emitter);\n  this.off = this._emitter.removeListener.bind(this._emitter);\n\n  if (\n    props.protocol &&\n    props.protocol !== 'https' &&\n    (!props.host || /\\.stripe\\.com$/.test(props.host))\n  ) {\n    throw new Error(\n      'The `https` protocol must be used when sending requests to `*.stripe.com`'\n    );\n  }\n\n  this._api = {\n    auth: null,\n    host: props.host || DEFAULT_HOST,\n    port: props.port || DEFAULT_PORT,\n    protocol: props.protocol || 'https',\n    basePath: DEFAULT_BASE_PATH,\n    version: props.apiVersion || DEFAULT_API_VERSION,\n    timeout: utils.validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n    maxNetworkRetries: utils.validateInteger(\n      'maxNetworkRetries',\n      props.maxNetworkRetries,\n      0\n    ),\n    agent: props.httpAgent || null,\n    dev: false,\n  };\n\n  const typescript = props.typescript || false;\n  if (typescript !== Stripe.USER_AGENT.typescript) {\n    // The mutation here is uncomfortable, but likely fastest;\n    // serializing the user agent involves shelling out to the system,\n    // and given some users may instantiate the library many times without switching between TS and non-TS,\n    // we only want to incur the performance hit when that actually happens.\n    Stripe.USER_AGENT_SERIALIZED = null;\n    Stripe.USER_AGENT.typescript = typescript;\n  }\n\n  if (props.appInfo) {\n    this._setAppInfo(props.appInfo);\n  }\n\n  this._prepResources();\n  this._setApiKey(key);\n\n  this.errors = require('./Error');\n  this.webhooks = require('./Webhooks');\n\n  this._prevRequestMetrics = [];\n  this._enableTelemetry = props.telemetry !== false;\n\n  // Expose StripeResource on the instance too\n  this.StripeResource = Stripe.StripeResource;\n}\n\nStripe.errors = require('./Error');\nStripe.webhooks = require('./Webhooks');\n\nStripe.prototype = {\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   host: 'example.com',\n   *   port: '8080',\n   *   protocol: 'http',\n   * });\n   *\n   */\n  setHost(host, port, protocol) {\n    emitWarning(\n      '`setHost` is deprecated. Use the `host` config option instead.'\n    );\n    this._setApiField('host', host);\n    if (port) {\n      this.setPort(port);\n    }\n    if (protocol) {\n      this.setProtocol(protocol);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   protocol: 'http',\n   * });\n   *\n   */\n  setProtocol(protocol) {\n    emitWarning(\n      '`setProtocol` is deprecated. Use the `protocol` config option instead.'\n    );\n    this._setApiField('protocol', protocol.toLowerCase());\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   port: 3000,\n   * });\n   *\n   */\n  setPort(port) {\n    emitWarning(\n      '`setPort` is deprecated. Use the `port` config option instead.'\n    );\n    this._setApiField('port', port);\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   apiVersion: API_VERSION,\n   * });\n   *\n   */\n  setApiVersion(version) {\n    emitWarning(\n      '`setApiVersion` is deprecated. Use the `apiVersion` config or request option instead.'\n    );\n    if (version) {\n      this._setApiField('version', version);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY);\n   *\n   * Or, for Stripe Connect, use `stripeAccount` instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   stripeAccount: 'acct_...',\n   * });\n   *\n   * Or, to use a different apiKey on a given request:\n   *\n   * stripe.customers.create(params, {apiKey: 'sk_test_...'});\n   */\n  setApiKey(key) {\n    emitWarning(\n      '`setApiKey` is deprecated. Use the `apiKey` request option instead.'\n    );\n    this._setApiKey(key);\n  },\n\n  /**\n   * @private\n   */\n  _setApiKey(key) {\n    if (key) {\n      this._setApiField('auth', `Bearer ${key}`);\n    }\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   timeout: TIMEOUT_MS,\n   * });\n   */\n  setTimeout(timeout) {\n    emitWarning(\n      '`setTimeout` is deprecated. Use the `timeout` config or request option instead.'\n    );\n    this._setApiField('timeout', timeout == null ? DEFAULT_TIMEOUT : timeout);\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   appInfo: {\n   *     name: 'MyPlugin',\n   *     version: '1.4.2',\n   *     url: 'https://myplugin.com',\n   *     partner_id: '1234',\n   *   },\n   * });\n   */\n  setAppInfo(info) {\n    emitWarning(\n      '`setAppInfo` is deprecated. Use the `appInfo` config option instead.'\n    );\n    this._setAppInfo(info);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setAppInfo(info) {\n    if (info && typeof info !== 'object') {\n      throw new Error('AppInfo must be an object.');\n    }\n\n    if (info && !info.name) {\n      throw new Error('AppInfo.name is required');\n    }\n\n    info = info || {};\n\n    const appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n      if (typeof info[prop] == 'string') {\n        accum = accum || {};\n\n        accum[prop] = info[prop];\n      }\n\n      return accum;\n    }, undefined);\n\n    // Kill the cached UA string because it may no longer be valid\n    Stripe.USER_AGENT_SERIALIZED = undefined;\n\n    this._appInfo = appInfo;\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const ProxyAgent = require('https-proxy-agent');\n   * const stripe = new Stripe(API_KEY, {\n   *   httpAgent: new ProxyAgent(process.env.http_proxy),\n   * });\n   *\n   */\n  setHttpAgent(agent) {\n    emitWarning(\n      '`setHttpAgent` is deprecated. Use the `httpAgent` config option instead.'\n    );\n    this._setApiField('agent', agent);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiField(key, value) {\n    this._api[key] = value;\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getApiField(key) {\n    return this._api[key];\n  },\n\n  setClientId(clientId) {\n    this._clientId = clientId;\n  },\n\n  getClientId() {\n    return this._clientId;\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getConstant: (c) => {\n    switch (c) {\n      case 'DEFAULT_HOST':\n        return DEFAULT_HOST;\n      case 'DEFAULT_PORT':\n        return DEFAULT_PORT;\n      case 'DEFAULT_BASE_PATH':\n        return DEFAULT_BASE_PATH;\n      case 'DEFAULT_API_VERSION':\n        return DEFAULT_API_VERSION;\n      case 'DEFAULT_TIMEOUT':\n        return DEFAULT_TIMEOUT;\n      case 'MAX_NETWORK_RETRY_DELAY_SEC':\n        return MAX_NETWORK_RETRY_DELAY_SEC;\n      case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n        return INITIAL_NETWORK_RETRY_DELAY_SEC;\n    }\n    return Stripe[c];\n  },\n\n  getMaxNetworkRetries() {\n    return this.getApiField('maxNetworkRetries');\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   maxNetworkRetries: 2,\n   * });\n   *\n   */\n  setMaxNetworkRetries(maxNetworkRetries) {\n    this._setApiNumberField('maxNetworkRetries', maxNetworkRetries);\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiNumberField(prop, n, defaultVal) {\n    const val = utils.validateInteger(prop, n, defaultVal);\n\n    this._setApiField(prop, val);\n  },\n\n  getMaxNetworkRetryDelay() {\n    return MAX_NETWORK_RETRY_DELAY_SEC;\n  },\n\n  getInitialNetworkRetryDelay() {\n    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent and uses a cached version for a slight\n   * speed advantage.\n   */\n  getClientUserAgent(cb) {\n    if (Stripe.USER_AGENT_SERIALIZED) {\n      return cb(Stripe.USER_AGENT_SERIALIZED);\n    }\n    this.getClientUserAgentSeeded(Stripe.USER_AGENT, (cua) => {\n      Stripe.USER_AGENT_SERIALIZED = cua;\n      cb(Stripe.USER_AGENT_SERIALIZED);\n    });\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent by encoding a seeded object and\n   * fetching a uname from the system.\n   */\n  getClientUserAgentSeeded(seed, cb) {\n    utils.safeExec('uname -a', (err, uname) => {\n      const userAgent = {};\n      for (const field in seed) {\n        userAgent[field] = encodeURIComponent(seed[field]);\n      }\n\n      // URI-encode in case there are unusual characters in the system's uname.\n      userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n\n      if (this._appInfo) {\n        userAgent.application = this._appInfo;\n      }\n\n      cb(JSON.stringify(userAgent));\n    });\n  },\n\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getAppInfoAsString() {\n    if (!this._appInfo) {\n      return '';\n    }\n\n    let formatted = this._appInfo.name;\n\n    if (this._appInfo.version) {\n      formatted += `/${this._appInfo.version}`;\n    }\n\n    if (this._appInfo.url) {\n      formatted += ` (${this._appInfo.url})`;\n    }\n\n    return formatted;\n  },\n\n  /**\n   * @deprecated will be removed in a future major version. Use the config object instead:\n   *\n   * const stripe = new Stripe(API_KEY, {\n   *   telemetry: false,\n   * });\n   *\n   */\n  setTelemetryEnabled(enableTelemetry) {\n    emitWarning(\n      '`setTelemetryEnabled` is deprecated. Use the `telemetry` config option instead.'\n    );\n    this._enableTelemetry = enableTelemetry;\n  },\n\n  getTelemetryEnabled() {\n    return this._enableTelemetry;\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _prepResources() {\n    for (const name in resources) {\n      this[utils.pascalToCamelCase(name)] = new resources[name](this);\n    }\n  },\n\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _getPropsFromConfig(config) {\n    // If config is null or undefined, just bail early with no props\n    if (!config) {\n      return {};\n    }\n\n    // config can be an object or a string\n    const isString = typeof config === 'string';\n    const isObject = config === Object(config) && !Array.isArray(config);\n\n    if (!isObject && !isString) {\n      throw new Error('Config must either be an object or a string');\n    }\n\n    // If config is a string, we assume the old behavior of passing in a string representation of the api version\n    if (isString) {\n      return {\n        apiVersion: config,\n      };\n    }\n\n    // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n    const values = Object.keys(config).filter(\n      (value) => !ALLOWED_CONFIG_PROPERTIES.includes(value)\n    );\n\n    if (values.length > 0) {\n      throw new Error(\n        `Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(\n          ', '\n        )}`\n      );\n    }\n\n    return config;\n  },\n};\n\nmodule.exports = Stripe;\n\n// expose constructor as a named property to enable mocking with Sinon.JS\nmodule.exports.Stripe = Stripe;\n\n// Allow use with the TypeScript compiler without `esModuleInterop`.\n// We may also want to add `Object.defineProperty(exports, \"__esModule\", {value: true});` in the future, so that Babel users will use the `default` version.\nmodule.exports.default = Stripe;\n", "//[domain]/.netlify/functions/create-payment-intent\r\n\r\nrequire('dotenv').config()\r\n\r\nconst stripe = require('stripe')(process.env.REACT_APP_STRIPE_SECRET_KEY)\r\n\r\nexports.handler = async function (event, context) {\r\n  // if there's event.body object then it's a POST request, otherwise it's a GET request\r\n  if (event.body) {\r\n    const { cart } = JSON.parse(event.body)\r\n\r\n    // take the advice of calculating total amount on server instead of on client\r\n\r\n    const calculateTotal = cart => {\r\n      return cart.reduce((total, cartItem) => {\r\n        const { price, amount } = cartItem\r\n        total += amount * price\r\n        return total\r\n      }, 0)\r\n    }\r\n\r\n    try {\r\n      \r\n\r\n      const paymentIntent = await stripe.paymentIntents.create({\r\n        amount: calculateTotal(cart) * 100,\r\n        currency: 'thb',\r\n        automatic_payment_methods: {\r\n          enabled: true,\r\n        },\r\n      })\r\n\r\n      return {\r\n        statusCode: 200,\r\n        body: JSON.stringify({ clientSecret: paymentIntent.client_secret }),\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({ msg: error.message }),\r\n      }\r\n    }\r\n  } else {\r\n    // if there's no event.body, then it's a GET request\r\n    return {\r\n      statusCode: 200,\r\n      body: 'create-payment-intent',\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
